server:
  port: 8762
spring:
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    name: hikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/consumer_database?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&nullCatalogMeansCurrent=true
    username: root
    password: root
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  application:
    name: cloud-consumer
  profiles:
    active: dev
    include:
  cloud:
    nacos:
      discovery:
        server-addr: 124.223.56.147:8848  #nacos作为服务注册中心地址
      config:
        server-addr: 124.223.56.147:8848  #nacos作为配置中心地址
        file-extension: yaml #指定yaml格式的配置
        namespace:     #nacos配置中心的namespace，需要注意，如果使用public的namespace，请不要填写这个值，直接留空即可
    sentinel:
      transport:
        #配置 Sentinel dashboard 地址
        dashboard: localhost:8998
        #默认8719端口，假如被占用会自动从8719开始依次+1扫描,直至找到未被占用的端口
        port: 8719
  zipkin:
    sender:
      type: web
    base-url: http://localhost:9411
    service:
      name: consumer
  sleuth:
    sampler:
      probability: 1

#开启sentinel 对 feign的支持
feign:
  sentinel:
    enabled: true
management:
  endpoints:
    web:
      exposure:
        include: '*'

# seata配置
seata:
  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启
  enabled: true
  # Seata 应用编号，默认为 ${spring.application.name}
  application-id: ${spring.application.name}
  # Seata 事务组编号，用于 TC 集群名。该配置需要与服务端提到的group相对应，也需要与下面的相对应
  tx-service-group: ${spring.application.name}-group
  # 关闭自动代理
  # enable-auto-data-source-proxy: flase
  # 服务配置项
  service:
    # 虚拟组和分组的映射
    vgroupMapping:
      cloud-consumer-group: default   #该配置需要与服务端提到的group相对应
    grouplist:
      default: 127.0.0.1:8091
  config:
    # support: nacos, consul, apollo, zk, etcd3
    type: nacos
    nacos:
      serverAddr: 124.223.56.147:8848
      namespace:  # 需要与服务端添加的配置文件相同
      group: SEATA_GROUP
#      username: nacos   # nacos开启用户密码，要不然控制台一致报unknow user ，登陆失败
#      password: nacos   # nacos开启用户密码，要不然控制台一致报unknow user ，登陆失败
      file-extension: yml
      shared-configs:
        - dataId: seata-server.yml # 需要与服务端添加的配置文件相同
          namespace:  # 需要与服务端添加的配置文件相同
          group: SEATA_GROUP # 需要与服务端添加的配置文件相同
  registry:
    # support: nacos, eureka, redis, zk, consul, etcd3, sofa
    type: nacos
    nacos:
      serverAddr: 124.223.56.147:8848
      namespace:   # 需要与服务端添加的配置文件相同
      group: SEATA_GROUP	# 需要与服务端添加的配置文件相同
#      username: nacos   # nacos开启用户密码，要不然控制台一致报unknow user ，登陆失败
#      password: nacos   # nacos开启用户密码，要不然控制台一致报unknow user ，登陆失败
      file-extension: yml
      shared-configs:
        - dataId: seata-server.yml	# 需要与服务端添加的配置文件相同
          namespace:  # 需要与服务端添加的配置文件相同
          group: SEATA_GROUP # 需要与服务端添加的配置文件相同


mybatis-plus:
  global-config:
    banner: false
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
  type-aliases-package: com.lutw.seata
